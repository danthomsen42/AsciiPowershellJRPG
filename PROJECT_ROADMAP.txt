PowerShell ASCII JRPG Development Roadmap
Project: AsciiPowershellJRPG  
Owner: danthomsen42  
Last Updated: August 22, 2025  
Status: Living Document

================================================================================
CURRENT PROJECT STATUS
================================================================================
✅ Working battle system (single enemy, basic attack/run)
✅ Map navigation with viewport rendering  
✅ NPC dialogue system with branching conversations
✅ Procedural map generation (already implemented!)
✅ Save/load system
✅ Equipment and stats framework
✅ Basic enemy variety (5 enemies with ASCII art)
✅ Settings menu system with persistent configuration
✅ Professional start screen with main menu navigation
✅ Final Fantasy 1 style character creation with 4-class party system

================================================================================
PHASE 1: CORE BATTLE SYSTEM ENHANCEMENT (HIGH PRIORITY)
================================================================================
Goal: Build upon existing battle foundation

1.1 Enhanced Player Battle Options ⭐ ✅ COMPLETED
- Current: Attack, Defend, Spells, Items, Run options
- Added: 
  * Defend action (reduces incoming damage by 50%)
  * Use Items (Health Potions restore 15 HP)
  * Cast Spells (Fire, Heal with MP costs)
  * Improved Flee mechanics (75% base chance + 5% per level)
- Files modified: Display.ps1 (battle system section)
- Completion date: August 4, 2025

1.2 Speed-Based Turn Order ⭐ ✅ COMPLETED
- Current: Player always goes first
- Add: Speed stat determines who acts when
- Implementation: 
  * Add Speed property to Player.ps1 and Enemies.ps1
  * Create turn queue system
  * Display turn order to player
- Dependencies: 1.1 complete
- Files modified: Player.ps1, Enemies.ps1, Display.ps1
- Completion date: August 4, 2025

1.3 Enemy AI & Spell System ⭐ ✅ COMPLETED
- Current: Enemies only do basic attacks
- Add: 
  * Enemy spell casting
  * Intelligent target selection
  * Different AI behaviors per enemy type
- Implementation:
  * Added MP/MaxMP to all enemies
  * Gave enemies spell lists (Fire, Ice, Heal combinations)
  * Enhanced AI decision-making: 
    - Heals when HP below 40%
    - 60% chance to cast attack spells
    - Falls back to basic attacks
  * Updated enemy stats display to show MP
  * Enhanced spell system with more variety
  * Implemented anti-flicker display system:
    - Static elements drawn once (enemy viewport, controls)
    - Selective updates for dynamic content (HP/MP, messages)
    - Eliminated screen flickering during combat
- Dependencies: 1.2 complete
- Files modified: Enemies.ps1, Spells.ps1, Display.ps1
- Completion date: August 4, 2025
- Files to modify: Enemies.ps1, Spells.ps1
- Estimated effort: 3-4 days

1.4 Comprehensive Save System ⭐⭐ ✅ COMPLETED
- Current: Basic XP and monster kill tracking in savegame.json
- Add:
  * Character stats and progression (HP, MP, Level, Skills)
  * Equipment and inventory state
  * Quest progress and completion status
  * World state (NPC dialogue flags, triggered events)
  * Map exploration progress
  * Optional: Player coordinates and current map location
  * Multiple save slots with timestamps
  * Auto-save functionality
- Implementation:
  * Created comprehensive save directory structure with separate files:
    - autosave.json (automatic saves after battles)
    - quicksave.json (F5 quick save)
    - save_slot_1-5.json (manual save slots)
  * Enhanced save data structure:
    - GameInfo: Version, save time, play time tracking
    - Player: All stats (HP/MP/XP/Level), equipment, position, progression tracking
    - World State: NPCs spoken to, items collected, areas discovered
    - Game Events: Last battle won, level up, item found, NPC talk
  * Auto-save triggers:
    - Battle victories (with enemy name and XP gained)
    - Map transitions
    - NPC interactions
    - Item collection
    - Character stat changes
  * Manual save functionality:
    - F5: Quick save
    - F9: Save menu with slot selection (1-5)
    - Load from any slot
    - View all save slots with timestamps
  * Backward compatibility with legacy savegame.json
  * Player state synchronization between save data and game objects
- Dependencies: 1.3 complete
- Files modified: Display.ps1 (major save system overhaul)
- Completion date: August 4, 2025
- Estimated effort: 4-5 days

================================================================================
PHASE 2: PARTY SYSTEM (MEDIUM-HIGH PRIORITY)
================================================================================
Goal: Major gameplay expansion - multiple controllable characters

2.1 Multiple Party Members ⭐⭐
- Current: Single player character
- Add: 
  * 2-4 party members with different classes
  * Unique stats, abilities, equipment per member
  * Class system (Warrior, Mage, Healer, Rogue)
- Dependencies: Phase 1 complete
- New files: PartySystem.ps1
- Files to modify: Player.ps1, Display.ps1
- Estimated effort: 5-7 days

2.2 Snake-Style Following ⭐⭐ ✅ COMPLETED
- Current: Single @ character
- Add: 
  * Party members follow leader in overworld
  * Snake-like movement trail
  * Different characters for each party member
- Implementation:
  * Added movement trail system with configurable spacing
  * Party members follow in formation: @ (Leader), M (Mage), H (Healer), R (Rogue)
  * 2-position separation between party members for clear visibility
  * Integrated with map transitions (entire party moves together)
  * Position tracking and rendering system for smooth following
  * Compatible with existing battle and save systems
- Dependencies: 2.1 complete
- Files modified: Display.ps1 (movement and rendering), PartySystem.ps1 (snake following functions)
- Completion date: August 8, 2025
- Estimated effort: 2-3 days

2.3 Multi-Enemy Battles ⭐⭐ ✅ COMPLETED
- Current: Single enemy encounters
- Add: 
  * Multiple enemies on screen (Dragon Quest style)
  * Target selection for attacks/spells
  * Formation-based combat
- Implementation:
  * Multi-enemy selection logic (1-3 enemies per battle)
  * Enhanced combat display system with enemy list and targeting
  * Target selection menus for attacks and spells
  * Simple enemy AI maintained (50% spell chance, basic healing logic)
  * Victory conditions updated for multiple enemies
  * XP distribution calculated from all defeated enemies
  * Added testing spell "Obliterate" (1 MP, 1000 damage) for quick testing
  * Turn order system works seamlessly with multiple enemies
  * Enemy status display shows all enemies in battle
- Dependencies: 2.1 complete
- Files modified: Display.ps1, CombatDisplay.ps1, Spells.ps1, Player.ps1, PartySystem.ps1
- Completion date: August 12, 2025
- Estimated effort: 4-5 days

================================================================================
PHASE 3: QUEST & CONTENT SYSTEM (MEDIUM PRIORITY)
================================================================================
Goal: Build on existing NPC framework

3.0 Enhanced NPC Communication System ⭐ ✅ COMPLETED
- Current: Basic dialogue trees with simple state flags
- Add:
  * Comprehensive quest delivery and management system
  * Advanced dialogue conditions (story flags, quest status, map location)
  * Enhanced NPC personalities with context-aware responses
  * Integration with quest tracking for objective updates
- Implementation:
  * Created QuestSystem.ps1 with full quest management
  * Enhanced NPCs with rich, context-sensitive dialogues
  * Added story flag system for complex narrative tracking
  * Integrated quest prerequisites and conditional availability
  * Created 3 quest templates: Main quest (Princess rescue), Side quests (Missing cat, Merchant escort)
  * Enhanced NPCs: King (quest giver), Town Elder (local issues), Merchant (trade problems)
  * Backward compatible with existing save system
- Dependencies: Phase 1 & 2 systems for save integration
- Files created: QuestSystem.ps1
- Files modified: NPCs.ps1 (complete overhaul with quest integration)
- Completion date: August 14, 2025
- Estimated effort: 2-3 days

3.1 Quest Tracking System ⭐ ✅ COMPLETED
- Current: Enhanced quest delivery and management foundation complete
- Add: 
  * Quest log/journal interface (Show-QuestLog function implemented) ✅
  * In-game quest log access (J key integration added) ✅ 
  * Objective progress indicators and notifications ✅
  * Quest completion celebration and reward distribution ✅
  * Multiple active quest management ✅
- Implementation:
  * Added J key binding to Display.ps1 for quest log access
  * Integrated quest log interface with main game loop
  * Enhanced NPC placement on actual map coordinates:
    - King (K): X=42, Y=2 (castle throne room area)
    - Town Elder (E): X=25, Y=10 (central town square)  
    - Merchant (M): X=15, Y=23 (merchant quarter)
  * Updated Display.ps1 to load enhanced NPCs with quest integration
  * Fixed function references and variable naming conflicts
  * All NPCs placed at valid map coordinates in open spaces
- Dependencies: 3.0 complete ✅
- Files modified: Display.ps1 (quest log key binding, enhanced NPC loading), NPCs.ps1 (coordinate placement)
- Completion date: August 14, 2025
- Estimated effort: 1-2 days (reduced due to 3.0 foundation)

3.2 Expanded NPC Dialogues ⭐ ✅ COMPLETED
- Current: Enhanced dialogue trees with conditions
- Add: 
  * Conditional dialogues based on party composition ✅
  * Story progress-dependent conversations ✅
  * More complex dialogue trees ✅
- Implementation:
  * Added party composition checks (ready for future party system)
  * Story flag integration for narrative progression
  * Complex branching dialogues with multiple paths
  * Context-aware NPC responses based on player actions
- Dependencies: 3.0 complete ✅
- Files modified: NPCs.ps1 ✅
- Completion date: August 14, 2025
- Estimated effort: 2-3 days

================================================================================
PHASE 4: VISUAL & QOL IMPROVEMENTS (MEDIUM PRIORITY)
================================================================================
Goal: Polish and accessibility

4.1 Color Implementation 🎨
- Current: Mostly monochrome display
- Add: 
  * Color coding for different elements
  * HP/MP bars with colors
  * Enemy/ally distinction
  * Map terrain colors
- Dependencies: None
- Files to modify: Display.ps1
- Estimated effort: 2-3 days

4.2 Resizable Viewport 🖥️
- Current: Fixed 50x20 viewport
- Add: 
  * Dynamic sizing based on terminal size
  * Settings to adjust viewport
  * Minimum/maximum size constraints
- Dependencies: None
- Files to modify: Display.ps1
- Estimated effort: 1-2 days

4.3 Settings Menu ⚙️ ✅ COMPLETED
- Current: No centralized settings system
- Add: 
  * Accessible settings for graphics, controls, gameplay
  * Save/load settings to persistent settings.json file
  * In-game settings access via ESC key integration
  * Comprehensive settings categories (Display, Audio, Controls, Gameplay)
  * Professional menu interface with arrow key navigation
- Implementation:
  * Created complete SettingsMenu.ps1 with full settings management
  * Added persistent settings.json storage system
  * Integrated ESC key access from main game loop
  * Comprehensive settings categories:
    - Display Settings: Colors, viewport size, animations
    - Audio Settings: Sound effects, music volume (ready for future audio)
    - Control Settings: Key bindings, movement speed
    - Gameplay Settings: Difficulty, auto-save, battle speed
  * Professional menu navigation with color-coded options
  * Settings validation and default value handling
  * Backward compatible with existing game systems
- Dependencies: None (standalone system)
- Files created: SettingsMenu.ps1
- Files modified: Display.ps1 (ESC key integration)
- Completion date: August 22, 2025
- Estimated effort: 2-3 days

================================================================================
PHASE 5: START SCREEN & CHARACTER CREATION SYSTEM (MEDIUM-HIGH PRIORITY)
================================================================================
Goal: Professional game presentation and character customization

5.1 Main Menu & Start Screen 🎮 ✅ COMPLETED
- Current: Game starts directly in exploration mode
- Add: 
  * Professional start screen with ASCII title art
  * Main menu options: New Game, Load Game, Settings, Credits, Exit
  * Credits screen with comprehensive development information
  * Menu navigation with arrow keys and Enter/Escape
  * Integration with Settings Menu system
  * Professional game launcher with error handling
- Implementation:
  * Created GameLauncherSimple.ps1 as professional game entry point
  * ASCII art title system with clean, compatible design
  * Interactive main menu with responsive navigation (Up/Down/Enter/ESC)
  * Credits screen showcasing:
    - Developer information and repository details
    - Technology stack and framework acknowledgments
    - Feature implementation highlights
    - Special thanks and inspirations
  * Seamless integration with existing game systems:
    - Settings Menu integration via ESC key
    - New Game launches existing game loop
    - Load Game menu prepared for future save integration
  * Clean interface design avoiding Unicode encoding issues
  * Professional presentation with proper error handling
- Dependencies: Phase 4.3 (Settings Menu) for full integration
- Files created: GameLauncherSimple.ps1
- Files modified: None (standalone system)
- Completion date: August 22, 2025
- Estimated effort: 3-4 days

5.2 Story Intro Sequence 📜
- Current: No story introduction
- Add: 
  * Classic RPG-style intro sequence
  * Scrolling text narrative explaining the world/quest
  * Multiple screens with story progression (like FF1/Dragon Quest)
  * ASCII art illustrations to accompany story beats
  * Skip option for repeat playthroughs
  * Save story progression state
- Dependencies: 5.1 complete
- New files: StoryIntro.ps1
- Files to modify: StartScreen.ps1
- Estimated effort: 2-3 days

5.3 Character Creation System 👥 ✅ COMPLETED
- Current: Fixed single hero character
- Add: 
  * Final Fantasy 1 style party creation
  * Choose 3-4 party members from class selection
  * Character classes: Warrior, Mage, Healer, Rogue (expandable)
  * Custom name input for each character
  * Class-specific starting stats and equipment
  * Starting level 1 with class-appropriate abilities
  * Preview character stats before confirming party
  * Random name generator option
- Implementation:
  * Created comprehensive CharacterCreation.ps1 with full party creation system
  * Interactive class selection with detailed character previews:
    - Visual class browser with Up/Down navigation
    - Real-time stat display for selected classes
    - Equipment and spell information
  * Advanced naming system:
    - Custom name input with length validation and capitalization
    - Class-specific fantasy name suggestions
    - Random name generation with multiple categories (Male/Female/Unisex/Class-themed)
    - 80+ unique names across all categories
  * Character generation with balanced stats:
    - Warrior: High HP/Defense tank (35 HP, 8 ATK, 6 DEF)
    - Mage: Powerful spellcaster (20 HP, 15 MP, 4 spell arsenal)
    - Healer: Support specialist (25 HP, 12 MP, healing focus)
    - Rogue: Fast striker (28 HP, 9 SPD, agility-based)
  * Professional party preview system:
    - Complete stat summary for all 4 characters
    - Equipment visualization
    - Party formation display and total statistics
    - Confirmation/restart/randomize options
  * Seamless integration with existing game systems:
    - Updated GameLauncherSimple.ps1 with "Create Party" option
    - Automatic party initialization and game launch
    - Compatible with existing save system and battle mechanics
- Dependencies: 5.1 complete ✅, PartySystem.ps1 (existing) ✅
- Files created: CharacterCreation.ps1, TestCharacterCreation.ps1
- Files modified: GameLauncherSimple.ps1 (character creation integration)
- Completion date: August 22, 2025
- Estimated effort: 4-5 days

5.4 Enhanced Load Game Integration 💾
- Current: Basic save slot viewing
- Add: 
  * Seamless integration with start screen
  * Save file preview showing party composition, play time, progress
  * Thumbnail-style save slot display
  * Delete save option with confirmation
  * Import/Export save files
  * Auto-detect and migrate legacy saves
- Dependencies: 5.1 complete, Phase 1.4 (Save System) complete
- Files to modify: StartScreen.ps1, Display.ps1 (save system integration)
- Estimated effort: 2-3 days

================================================================================
PHASE 6: CONTENT EXPANSION (LOW PRIORITY)
================================================================================
Goal: More variety and replayability

6.1 Monster Variety 🐉
- Current: 5 basic enemies
- Add: 
  * 20+ unique enemies with special abilities
  * Boss monsters with unique mechanics
  * Area-specific enemy types
- Dependencies: Phase 1 complete for spell system
- Files to modify: Enemies.ps1
- Estimated effort: 4-6 days

6.2 Procedural Content Integration 🎲
- Current: Already implemented in ProceduralMaps.ps1!
- Add: 
  * Story integration with procedural dungeons
  * Themed procedural areas
  * Random encounter variety
- Dependencies: None (ready to use!)
- Estimated effort: 2-3 days

================================================================================
MISSING CORE FEATURES (SHOULD CONSIDER)
================================================================================

Character Progression:
- Level Up Mechanics: Stat increases, new abilities on level up
- Character Classes/Jobs: Warrior, Mage, Healer, Rogue with unique abilities
- Skill Trees: Branching advancement paths

Combat Features:
- Status Effects: Poison, Sleep, Paralysis, Buffs/Debuffs
- Critical Hits: Chance-based bonus damage
- Elemental System: Fire, Ice, Lightning weaknesses/resistances

Item System:
- Item Crafting: Combine items to make better equipment
- Treasure Chests & Loot: Random item rewards
- Consumable Items: Potions, scrolls, temporary buffs

World Features:
- Shop System: Buy/sell with NPCs (framework exists)
- Magic Points (MP) System: Currently exists but underutilized
- Day/Night Cycle: Time-based events and NPC schedules

================================================================================
ARCHITECTURE IMPROVEMENTS
================================================================================

Code Organization:
- GameState.ps1: Centralize all game state management
- BattleSystem.ps1: Separate combat logic into dedicated module  
- Utils.ps1: Common helper functions
- Config.ps1: Game configuration and constants

Performance Optimizations:
- Viewport Culling: Only render visible map areas
- Input Buffering: Prevent movement lag
- Memory Management: Efficient enemy/party data handling

================================================================================
FUTURE/POTENTIAL IDEAS
================================================================================

Audio System 🔊
- Sound Effects: 
  * PowerShell natively supports .wav files via System.Media.SoundPlayer
  * Battle sounds, menu navigation, footsteps
  * Investigate support for other formats (mp3, ogg)
- Background Music: 
  * Looping background tracks for different areas
  * Dynamic music based on combat/exploration
- Audio Settings: Volume controls, mute options

Advanced Graphics:
- Unicode Art: Enhanced visual elements using extended Unicode
- Animation System: Character movement animations, spell effects
- Weather Effects: Rain, snow visual overlays
- Lighting System: Torch/lantern mechanics, darkness effects

Multiplayer Features:
- Local Co-op: Multiple players controlling different party members
- Turn-based Multiplayer: Hot-seat style gameplay
- Online Features: Shared world state, leaderboards

Modding Support:
- Script Loading: External PowerShell modules for custom content
- Asset Loading: External files for maps, enemies, items
- Configuration Files: JSON/XML-based content definition

Quality of Life:
- Auto-save: Periodic background saving
- Multiple Save Slots: Different playthroughs
- Replay System: Record and playback gameplay
- Debug Mode: Developer tools and cheats

Platform Features:
- Cross-Platform: PowerShell Core compatibility
- Windows Terminal: Enhanced terminal feature support
- Package Distribution: PowerShell Gallery module

Accessibility:
- Screen Reader Support: Text-to-speech integration
- Colorblind Support: Alternative visual indicators
- Keyboard Shortcuts: Full keyboard navigation
- Text Scaling: Adjustable font sizes

Data Persistence:
- Cloud Save Integration: OneDrive/Google Drive sync
- Export/Import Features: Share save files between devices
- Statistics Tracking: Play time, battles won, areas explored

Advanced AI:
- Machine Learning NPCs: Adaptive dialogue based on player behavior
- Procedural Story Generation: Dynamic quest creation
- Smart Enemy Scaling: Difficulty adjustment based on player skill

================================================================================
RECOMMENDED DEVELOPMENT ORDER
================================================================================

CURRENT PRIORITY (Phase 1 Complete ✅):
1. ✅ Enhanced Battle Options (1.1) - COMPLETED
2. ✅ Speed-Based Combat (1.2) - COMPLETED  
3. ✅ Enemy AI & Spells (1.3) - COMPLETED
4. ✅ Comprehensive Save System (1.4) - COMPLETED

NEXT RECOMMENDED PHASES:
5. Color System (4.1) - Visual improvement, quick win
6. Multiple Party Members (2.1) - Major gameplay feature
7. Quest Tracking (3.1) - Content framework expansion
8. Multi-Enemy Battles (2.3) - Advanced combat mechanics
9. Start Screen & Character Creation (5.1-5.3) - Professional presentation
10. Story Intro Sequence (5.2) - Complete game experience

POLISH & FINAL PHASES:
11. Settings Menu (4.3) - User experience refinement
12. Enhanced Load Game (5.4) - Complete start screen integration
13. Monster Variety (6.1) - Content expansion
14. Procedural Integration (6.2) - Replayability features

================================================================================
DEVELOPMENT NOTES
================================================================================

Strengths of Current Codebase:
- Solid procedural map generation (impressive feature!)
- Clean separation of concerns (separate files for different systems)
- Working save/load system
- Efficient viewport rendering
- Extensible NPC dialogue system

Technical Considerations:
- PowerShell performance limitations for real-time graphics
- Console/terminal compatibility across different systems
- Memory usage with large maps and multiple enemies
- Input handling responsiveness

Version Control Strategy:
- Feature branches for major additions
- Regular commits for incremental progress
- Tag releases for stable versions
- Document breaking changes

================================================================================
SUCCESS METRICS
================================================================================
- Phase 1: Engaging turn-based combat with multiple options
- Phase 2: Full party-based gameplay like classic JRPGs
- Phase 3: Rich story content with meaningful quests
- Phase 4: Polished, accessible user experience
- Phase 5: High replay value with varied content

================================================================================
CREATIVE DISCOVERIES & FUTURE PUZZLE MECHANICS
================================================================================
These are interesting visual effects and behaviors discovered during development
that could be deliberately implemented for unique gameplay features.

💫 PHANTOM ECHO EFFECT (Discovered August 22, 2025)

What it was: During implementation of the centered map rendering system, a coordinate
translation bug created a fascinating visual where party members appeared in two
locations simultaneously - once at their correct positions within small centered maps,
and again as "ghost/phantom" characters at their equivalent positions as if the map
were full-sized (typically appearing outside the map boundaries but within the viewport).

Technical cause: The main rendering functions (Draw-ViewportWithANSI and 
Draw-ViewportTraditional) correctly handled coordinate translation for centered maps
using mapOffsetX/mapOffsetY parameters, but the color application function 
(Apply-CharacterColorsToViewport) was using raw world coordinates without accounting
for the centering offset. This created dual rendering where:
- Monochrome characters appeared at raw coordinates (the "phantoms")  
- Colored characters appeared at offset-corrected coordinates (the real positions)

Future Implementation Ideas:
🎮 MIRROR DIMENSION PUZZLES: Could create areas where player actions affect both
their real position and a "phantom" position simultaneously, requiring coordination
between both positions to solve puzzles.

🎮 ASTRAL PROJECTION MECHANICS: Magic spells that intentionally create phantom
versions of party members that can activate switches, scout areas, or provide
tactical advantages in combat.

🎮 DIMENSIONAL SHIFT DUNGEONS: Rooms where the "phantom echo" represents an
alternate dimension overlay - players might need to position themselves so their
phantom can access areas their real form cannot reach.

🎮 TEMPORAL ECHOES: Story elements where the phantom positions represent past or
future positions of characters, creating time-based puzzle mechanics.

How to recreate:
1. In ViewportRenderer.ps1, modify Apply-CharacterColorsToViewport to NOT use
   the mapOffsetX/mapOffsetY parameters (remove the + $mapOffsetX/Y from the
   screenX/screenY calculations)
2. Use small centered maps (like StoreMap1) 
3. The "real" characters will appear correctly positioned in the centered map
4. The "phantom" characters will appear at the raw coordinate positions

This effect was most visually striking because:
- The real characters (colored) appeared logical and correct
- The phantoms (monochrome) appeared in systematic positions, creating the impression
  of intentional game mechanics rather than random glitches
- Both sets of characters moved in perfect synchronization

CODE LOCATION: ViewportRenderer.ps1, Apply-CharacterColorsToViewport function
FIXED IN: Centered map rendering implementation (August 22, 2025)
REPLICATION: Remove coordinate offset correction in color application function


(Settings option ideas)
1. Toggle on and off the '.'s in the view area. 
================================================================================
NOTES SECTION
================================================================================
(Add your development notes, ideas, and progress updates here)

Remember: This is a living document. Update priorities, add new ideas, and 
adjust timelines based on development progress and inspiration!

Last Updated: August 4, 2025
Next Review Date: [Add your preferred review schedule]
